node {
   def mvnHome
   def service_name
   def dockerComposeHome
   environment {
    EXE_DEV = "dev"
   }
   stage('获取源码') {
     // get source code from git* repo
      checkout([$class: 'GitSCM', branches: [[name: params.BRANCH]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/dean-coding/micro-service-practice.git']]])
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured in the global configuration.
      mvnHome = '/usr/share/maven'
      dockerComposeHome = '/usr/local'
      service_name = params.service_name
   }
   stage('打包编译') {
     // Run the maven build
     sh "'${mvnHome}/bin/mvn' clean package -Dmaven.test.skip -pl ${service_name} -am"
   }
   stage('构建镜像') {
     sh "'${mvnHome}/bin/mvn' -pl ${service_name} -am dockerfile:build"
   }
   stage('构建容器') {
     sh "'${dockerComposeHome}/bin/docker-compose' -f docker-compose-prod.yml stop ${service_name}"
     sh "sleep 3s"
     sh "'${dockerComposeHome}/bin/docker-compose' -f docker-compose-prod.yml rm -f ${service_name}"
     sh "'${dockerComposeHome}/bin/docker-compose' -f docker-compose-prod.yml up --no-deps --force-recreate -d ${service_name}"
     echo "prune none images [start]"
     sh " '/usr/bin/docker' image prune -f"
     echo "prune none images [over]"
     sh "sleep 10s"
     echo "build and up service container [over]"
     sh "'${dockerComposeHome}/bin/docker-compose' -f docker-compose-prod.yml ps"
   }
}