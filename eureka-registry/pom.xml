<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.dean.practice</groupId>
        <artifactId>micro-service-practice</artifactId>
        <version>1.0.1</version>
    </parent>

    <artifactId>eureka-registry</artifactId>
    <version>1.0.1</version>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy.verison}</version>
                <configuration>
                    <updateReleaseInfo>true</updateReleaseInfo>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- dockerfile:build的创建方式
                1 dockerfile-maven-plugin的目标就是将maven的打包过程和docker的build过程结合在一起
                2 @see https://github.com/spotify/dockerfile-maven
             -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>package</phase>
                        <goals>
                            <!--如果package时不想用docker打包,就注释掉这个goal-->
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--   docker私有仓库用户名,已登录则不需要 -->
                    <username>langlingqi</username>
                    <!--   docker私有仓库密码，已登录则不需要   -->
                    <password>719738494@</password>
                    <!-- 本地直接用：${project.artifactId} -->
                    <repository>https://hub.docker.com/repository/docker/langlingqi/rangers-docker-repo/${project.artifactId}</repository>
                    <dockerfile>${project.basedir}/src/main/docker/Dockerfile</dockerfile>
                    <!-- docker的tag为项目版本号、默认latest -->
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
